Index: linux-amlogic-3.10-bringup/drivers/amlogic/display/osd/osd_main.c
===================================================================
--- linux-amlogic-3.10-bringup.orig/drivers/amlogic/display/osd/osd_main.c	2015-07-28 11:06:00.000000000 +0800
+++ linux-amlogic-3.10-bringup/drivers/amlogic/display/osd/osd_main.c	2015-07-31 10:55:12.777164765 +0800
@@ -99,7 +99,7 @@
 		lower_margin=COLOR_INDEX_24_6666_A;
 		break;		
 		case 3:
-		upper_margin=COLOR_INDEX_32_ABGR;
+		upper_margin=COLOR_INDEX_32_ARGB;
 		lower_margin=COLOR_INDEX_32_BGRA;
 		break;
 		case 4:
@@ -270,6 +270,12 @@
 	return 0;
 }
 
+#ifdef CONFIG_FB_AMLOGIC_UMP
+int (*disp_get_ump_secure_id) (struct fb_info *info, myfb_dev_t *g_fbi,
+					unsigned long arg, int buf);
+EXPORT_SYMBOL(disp_get_ump_secure_id);
+#endif
+
 static int
 osd_ioctl(struct fb_info *info, unsigned int cmd,
                unsigned long arg)
@@ -289,6 +295,11 @@
 	fb_sync_request_t  sync_request;
 
 
+	unsigned int karg = 0;
+#ifdef CONFIG_FB_AMLOGIC_UMP
+	int secure_id_buf_num = 0;
+#endif
+
     	switch (cmd)
   	{
    		case  FBIOPUT_OSD_SRCKEY_ENABLE:
@@ -338,6 +349,44 @@
 		case FBIOPUT_OSD_WINDOW_AXIS:
 			ret=copy_from_user(&osd_dst_axis, argp, 4 * sizeof(s32));
 			break;
+#ifdef CONFIG_FB_AMLOGIC_UMP
+		case GET_UMP_SECURE_ID_BUF2:	/* flow trough */
+		{
+			secure_id_buf_num = 1;
+			if (!disp_get_ump_secure_id)
+				request_module("osd_ump");
+			if (disp_get_ump_secure_id)
+				return disp_get_ump_secure_id(info, fbdev, arg,
+							      secure_id_buf_num);
+			else
+				return -ENOTSUPP;
+		}
+		break;
+		case GET_UMP_SECURE_ID_BUF1:	/* flow trough */
+		{
+			secure_id_buf_num = 0;
+			if (!disp_get_ump_secure_id)
+				request_module("osd_ump");
+			if (disp_get_ump_secure_id)
+				return disp_get_ump_secure_id(info, fbdev, arg,
+							      secure_id_buf_num);
+			else
+				return -ENOTSUPP;
+		}
+		break;
+#endif
+		case FBIOPUT_OSD2_CURSOR_DATA:
+		{
+			aml_hwc_addr_t para;
+			if (copy_from_user(&karg, argp, sizeof(unsigned int))) {
+				return -EFAULT;
+			}
+			if (copy_from_user(&para, (void __user *)karg, sizeof(aml_hwc_addr_t))) {
+				return -EFAULT;
+			}
+			ret = osddev_copy_data_tocursor(fbdev, &para);
+		}
+		break;
 		default :
 			amlog_mask_level(LOG_MASK_IOCTL,LOG_LEVEL_HIGH,"command not supported\n ");
 			return -1;
